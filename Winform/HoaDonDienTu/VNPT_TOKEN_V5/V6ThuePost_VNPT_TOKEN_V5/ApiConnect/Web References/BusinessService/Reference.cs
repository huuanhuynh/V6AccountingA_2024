//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace V6ThuePostXmlApi.BusinessService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BusinessServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BusinessService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback replaceInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceInvoiceActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceActionAssignedNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback adjustInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustInvoiceActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustActionAssignedNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelInvNoPayOperationCompleted;
        
        private System.Threading.SendOrPostCallback poolingInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvbyFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportInvUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback deliverInvFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback deliverInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentDetailFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentFkeyVNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnConfirmPaymentFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnConfirmPaymentFkeyVNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetTemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRolesbyAccOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewUserbyAccOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSerialByPatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPublishInvsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BusinessService(string url) {
            this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        public BusinessService() {
            this.Url = global::V6ThuePostXmlApi.Properties.Settings.Default.V6ThuePostApi_BusinessService_BusinessService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event replaceInvCompletedEventHandler replaceInvCompleted;
        
        /// <remarks/>
        public event ReplaceInvoiceActionCompletedEventHandler ReplaceInvoiceActionCompleted;
        
        /// <remarks/>
        public event ReplaceActionAssignedNoCompletedEventHandler ReplaceActionAssignedNoCompleted;
        
        /// <remarks/>
        public event ReplaceInvoiceCompletedEventHandler ReplaceInvoiceCompleted;
        
        /// <remarks/>
        public event adjustInvCompletedEventHandler adjustInvCompleted;
        
        /// <remarks/>
        public event AdjustInvoiceActionCompletedEventHandler AdjustInvoiceActionCompleted;
        
        /// <remarks/>
        public event AdjustActionAssignedNoCompletedEventHandler AdjustActionAssignedNoCompleted;
        
        /// <remarks/>
        public event AdjustInvoiceCompletedEventHandler AdjustInvoiceCompleted;
        
        /// <remarks/>
        public event cancelInvCompletedEventHandler cancelInvCompleted;
        
        /// <remarks/>
        public event cancelInvNoPayCompletedEventHandler cancelInvNoPayCompleted;
        
        /// <remarks/>
        public event poolingInvCompletedEventHandler poolingInvCompleted;
        
        /// <remarks/>
        public event GetInvbyFkeyCompletedEventHandler GetInvbyFkeyCompleted;
        
        /// <remarks/>
        public event reportInvUsedCompletedEventHandler reportInvUsedCompleted;
        
        /// <remarks/>
        public event reportMonthCompletedEventHandler reportMonthCompleted;
        
        /// <remarks/>
        public event deliverInvFkeyCompletedEventHandler deliverInvFkeyCompleted;
        
        /// <remarks/>
        public event deliverInvCompletedEventHandler deliverInvCompleted;
        
        /// <remarks/>
        public event confirmPaymentCompletedEventHandler confirmPaymentCompleted;
        
        /// <remarks/>
        public event confirmPaymentDetailCompletedEventHandler confirmPaymentDetailCompleted;
        
        /// <remarks/>
        public event unConfirmPaymentCompletedEventHandler unConfirmPaymentCompleted;
        
        /// <remarks/>
        public event confirmPaymentFkeyCompletedEventHandler confirmPaymentFkeyCompleted;
        
        /// <remarks/>
        public event confirmPaymentDetailFkeyCompletedEventHandler confirmPaymentDetailFkeyCompleted;
        
        /// <remarks/>
        public event confirmPaymentFkeyVNPCompletedEventHandler confirmPaymentFkeyVNPCompleted;
        
        /// <remarks/>
        public event UnConfirmPaymentFkeyCompletedEventHandler UnConfirmPaymentFkeyCompleted;
        
        /// <remarks/>
        public event UnConfirmPaymentFkeyVNPCompletedEventHandler UnConfirmPaymentFkeyVNPCompleted;
        
        /// <remarks/>
        public event ResetTemCompletedEventHandler ResetTemCompleted;
        
        /// <remarks/>
        public event GetAllRolesbyAccCompletedEventHandler GetAllRolesbyAccCompleted;
        
        /// <remarks/>
        public event CreateNewUserbyAccCompletedEventHandler CreateNewUserbyAccCompleted;
        
        /// <remarks/>
        public event getSerialByPatternCompletedEventHandler getSerialByPatternCompleted;
        
        /// <remarks/>
        public event getPublishInvsCompletedEventHandler getPublishInvsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/replaceInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string replaceInv(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("replaceInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void replaceInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert) {
            this.replaceInvAsync(Account, ACpass, xmlInvData, username, pass, fkey, convert, null);
        }
        
        /// <remarks/>
        public void replaceInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert, object userState) {
            if ((this.replaceInvOperationCompleted == null)) {
                this.replaceInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplaceInvOperationCompleted);
            }
            this.InvokeAsync("replaceInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert}, this.replaceInvOperationCompleted, userState);
        }
        
        private void OnreplaceInvOperationCompleted(object arg) {
            if ((this.replaceInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replaceInvCompleted(this, new replaceInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplaceInvoiceAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceInvoiceAction(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert, string pattern, string serial) {
            object[] results = this.Invoke("ReplaceInvoiceAction", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        Attachfile,
                        convert,
                        pattern,
                        serial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceInvoiceActionAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, System.Nullable<int> convert, string pattern, string serial) {
            this.ReplaceInvoiceActionAsync(Account, ACpass, xmlInvData, username, pass, fkey, Attachfile, convert, pattern, serial, null);
        }
        
        /// <remarks/>
        public void ReplaceInvoiceActionAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, System.Nullable<int> convert, string pattern, string serial, object userState) {
            if ((this.ReplaceInvoiceActionOperationCompleted == null)) {
                this.ReplaceInvoiceActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceInvoiceActionOperationCompleted);
            }
            this.InvokeAsync("ReplaceInvoiceAction", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        Attachfile,
                        convert,
                        pattern,
                        serial}, this.ReplaceInvoiceActionOperationCompleted, userState);
        }
        
        private void OnReplaceInvoiceActionOperationCompleted(object arg) {
            if ((this.ReplaceInvoiceActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceInvoiceActionCompleted(this, new ReplaceInvoiceActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplaceActionAssignedNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceActionAssignedNo(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert, string pattern, string serial) {
            object[] results = this.Invoke("ReplaceActionAssignedNo", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        Attachfile,
                        convert,
                        pattern,
                        serial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceActionAssignedNoAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, System.Nullable<int> convert, string pattern, string serial) {
            this.ReplaceActionAssignedNoAsync(Account, ACpass, xmlInvData, username, pass, fkey, Attachfile, convert, pattern, serial, null);
        }
        
        /// <remarks/>
        public void ReplaceActionAssignedNoAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, System.Nullable<int> convert, string pattern, string serial, object userState) {
            if ((this.ReplaceActionAssignedNoOperationCompleted == null)) {
                this.ReplaceActionAssignedNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceActionAssignedNoOperationCompleted);
            }
            this.InvokeAsync("ReplaceActionAssignedNo", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        Attachfile,
                        convert,
                        pattern,
                        serial}, this.ReplaceActionAssignedNoOperationCompleted, userState);
        }
        
        private void OnReplaceActionAssignedNoOperationCompleted(object arg) {
            if ((this.ReplaceActionAssignedNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceActionAssignedNoCompleted(this, new ReplaceActionAssignedNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplaceInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceInvoice(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("ReplaceInvoice", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceInvoiceAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert) {
            this.ReplaceInvoiceAsync(Account, ACpass, xmlInvData, username, pass, fkey, AttachFile, convert, null);
        }
        
        /// <remarks/>
        public void ReplaceInvoiceAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, object userState) {
            if ((this.ReplaceInvoiceOperationCompleted == null)) {
                this.ReplaceInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceInvoiceOperationCompleted);
            }
            this.InvokeAsync("ReplaceInvoice", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert}, this.ReplaceInvoiceOperationCompleted, userState);
        }
        
        private void OnReplaceInvoiceOperationCompleted(object arg) {
            if ((this.ReplaceInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceInvoiceCompleted(this, new ReplaceInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/adjustInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string adjustInv(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("adjustInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void adjustInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert) {
            this.adjustInvAsync(Account, ACpass, xmlInvData, username, pass, fkey, convert, null);
        }
        
        /// <remarks/>
        public void adjustInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert, object userState) {
            if ((this.adjustInvOperationCompleted == null)) {
                this.adjustInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadjustInvOperationCompleted);
            }
            this.InvokeAsync("adjustInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert}, this.adjustInvOperationCompleted, userState);
        }
        
        private void OnadjustInvOperationCompleted(object arg) {
            if ((this.adjustInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adjustInvCompleted(this, new adjustInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustInvoiceAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdjustInvoiceAction(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert, string pattern, string serial) {
            object[] results = this.Invoke("AdjustInvoiceAction", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert,
                        pattern,
                        serial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustInvoiceActionAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, string pattern, string serial) {
            this.AdjustInvoiceActionAsync(Account, ACpass, xmlInvData, username, pass, fkey, AttachFile, convert, pattern, serial, null);
        }
        
        /// <remarks/>
        public void AdjustInvoiceActionAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, string pattern, string serial, object userState) {
            if ((this.AdjustInvoiceActionOperationCompleted == null)) {
                this.AdjustInvoiceActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustInvoiceActionOperationCompleted);
            }
            this.InvokeAsync("AdjustInvoiceAction", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert,
                        pattern,
                        serial}, this.AdjustInvoiceActionOperationCompleted, userState);
        }
        
        private void OnAdjustInvoiceActionOperationCompleted(object arg) {
            if ((this.AdjustInvoiceActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustInvoiceActionCompleted(this, new AdjustInvoiceActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustActionAssignedNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdjustActionAssignedNo(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert, string pattern, string serial) {
            object[] results = this.Invoke("AdjustActionAssignedNo", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert,
                        pattern,
                        serial});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustActionAssignedNoAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, string pattern, string serial) {
            this.AdjustActionAssignedNoAsync(Account, ACpass, xmlInvData, username, pass, fkey, AttachFile, convert, pattern, serial, null);
        }
        
        /// <remarks/>
        public void AdjustActionAssignedNoAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, string pattern, string serial, object userState) {
            if ((this.AdjustActionAssignedNoOperationCompleted == null)) {
                this.AdjustActionAssignedNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustActionAssignedNoOperationCompleted);
            }
            this.InvokeAsync("AdjustActionAssignedNo", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert,
                        pattern,
                        serial}, this.AdjustActionAssignedNoOperationCompleted, userState);
        }
        
        private void OnAdjustActionAssignedNoOperationCompleted(object arg) {
            if ((this.AdjustActionAssignedNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustActionAssignedNoCompleted(this, new AdjustActionAssignedNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdjustInvoice(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("AdjustInvoice", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustInvoiceAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert) {
            this.AdjustInvoiceAsync(Account, ACpass, xmlInvData, username, pass, fkey, AttachFile, convert, null);
        }
        
        /// <remarks/>
        public void AdjustInvoiceAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, object userState) {
            if ((this.AdjustInvoiceOperationCompleted == null)) {
                this.AdjustInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustInvoiceOperationCompleted);
            }
            this.InvokeAsync("AdjustInvoice", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert}, this.AdjustInvoiceOperationCompleted, userState);
        }
        
        private void OnAdjustInvoiceOperationCompleted(object arg) {
            if ((this.AdjustInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustInvoiceCompleted(this, new AdjustInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cancelInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string cancelInv(string Account, string ACpass, string fkey, string userName, string userPass) {
            object[] results = this.Invoke("cancelInv", new object[] {
                        Account,
                        ACpass,
                        fkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelInvAsync(string Account, string ACpass, string fkey, string userName, string userPass) {
            this.cancelInvAsync(Account, ACpass, fkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void cancelInvAsync(string Account, string ACpass, string fkey, string userName, string userPass, object userState) {
            if ((this.cancelInvOperationCompleted == null)) {
                this.cancelInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelInvOperationCompleted);
            }
            this.InvokeAsync("cancelInv", new object[] {
                        Account,
                        ACpass,
                        fkey,
                        userName,
                        userPass}, this.cancelInvOperationCompleted, userState);
        }
        
        private void OncancelInvOperationCompleted(object arg) {
            if ((this.cancelInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelInvCompleted(this, new cancelInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cancelInvNoPay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string cancelInvNoPay(string Account, string ACpass, string fkey, string userName, string userPass) {
            object[] results = this.Invoke("cancelInvNoPay", new object[] {
                        Account,
                        ACpass,
                        fkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelInvNoPayAsync(string Account, string ACpass, string fkey, string userName, string userPass) {
            this.cancelInvNoPayAsync(Account, ACpass, fkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void cancelInvNoPayAsync(string Account, string ACpass, string fkey, string userName, string userPass, object userState) {
            if ((this.cancelInvNoPayOperationCompleted == null)) {
                this.cancelInvNoPayOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelInvNoPayOperationCompleted);
            }
            this.InvokeAsync("cancelInvNoPay", new object[] {
                        Account,
                        ACpass,
                        fkey,
                        userName,
                        userPass}, this.cancelInvNoPayOperationCompleted, userState);
        }
        
        private void OncancelInvNoPayOperationCompleted(object arg) {
            if ((this.cancelInvNoPayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelInvNoPayCompleted(this, new cancelInvNoPayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/poolingInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string poolingInv(string userName, string passWord, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] invData, string pattern) {
            object[] results = this.Invoke("poolingInv", new object[] {
                        userName,
                        passWord,
                        invData,
                        pattern});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void poolingInvAsync(string userName, string passWord, byte[] invData, string pattern) {
            this.poolingInvAsync(userName, passWord, invData, pattern, null);
        }
        
        /// <remarks/>
        public void poolingInvAsync(string userName, string passWord, byte[] invData, string pattern, object userState) {
            if ((this.poolingInvOperationCompleted == null)) {
                this.poolingInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpoolingInvOperationCompleted);
            }
            this.InvokeAsync("poolingInv", new object[] {
                        userName,
                        passWord,
                        invData,
                        pattern}, this.poolingInvOperationCompleted, userState);
        }
        
        private void OnpoolingInvOperationCompleted(object arg) {
            if ((this.poolingInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.poolingInvCompleted(this, new poolingInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInvbyFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInvbyFkey(string fkey, string username, string pass) {
            object[] results = this.Invoke("GetInvbyFkey", new object[] {
                        fkey,
                        username,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvbyFkeyAsync(string fkey, string username, string pass) {
            this.GetInvbyFkeyAsync(fkey, username, pass, null);
        }
        
        /// <remarks/>
        public void GetInvbyFkeyAsync(string fkey, string username, string pass, object userState) {
            if ((this.GetInvbyFkeyOperationCompleted == null)) {
                this.GetInvbyFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvbyFkeyOperationCompleted);
            }
            this.InvokeAsync("GetInvbyFkey", new object[] {
                        fkey,
                        username,
                        pass}, this.GetInvbyFkeyOperationCompleted, userState);
        }
        
        private void OnGetInvbyFkeyOperationCompleted(object arg) {
            if ((this.GetInvbyFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvbyFkeyCompleted(this, new GetInvbyFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/reportInvUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string reportInvUsed(int year, int quarter, int currentQuater, string username, string pass) {
            object[] results = this.Invoke("reportInvUsed", new object[] {
                        year,
                        quarter,
                        currentQuater,
                        username,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reportInvUsedAsync(int year, int quarter, int currentQuater, string username, string pass) {
            this.reportInvUsedAsync(year, quarter, currentQuater, username, pass, null);
        }
        
        /// <remarks/>
        public void reportInvUsedAsync(int year, int quarter, int currentQuater, string username, string pass, object userState) {
            if ((this.reportInvUsedOperationCompleted == null)) {
                this.reportInvUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportInvUsedOperationCompleted);
            }
            this.InvokeAsync("reportInvUsed", new object[] {
                        year,
                        quarter,
                        currentQuater,
                        username,
                        pass}, this.reportInvUsedOperationCompleted, userState);
        }
        
        private void OnreportInvUsedOperationCompleted(object arg) {
            if ((this.reportInvUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportInvUsedCompleted(this, new reportInvUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/reportMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string reportMonth(int year, int month, string username, string pass) {
            object[] results = this.Invoke("reportMonth", new object[] {
                        year,
                        month,
                        username,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reportMonthAsync(int year, int month, string username, string pass) {
            this.reportMonthAsync(year, month, username, pass, null);
        }
        
        /// <remarks/>
        public void reportMonthAsync(int year, int month, string username, string pass, object userState) {
            if ((this.reportMonthOperationCompleted == null)) {
                this.reportMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportMonthOperationCompleted);
            }
            this.InvokeAsync("reportMonth", new object[] {
                        year,
                        month,
                        username,
                        pass}, this.reportMonthOperationCompleted, userState);
        }
        
        private void OnreportMonthOperationCompleted(object arg) {
            if ((this.reportMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportMonthCompleted(this, new reportMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deliverInvFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deliverInvFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("deliverInvFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deliverInvFkeyAsync(string lstFkey, string userName, string userPass) {
            this.deliverInvFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void deliverInvFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.deliverInvFkeyOperationCompleted == null)) {
                this.deliverInvFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeliverInvFkeyOperationCompleted);
            }
            this.InvokeAsync("deliverInvFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.deliverInvFkeyOperationCompleted, userState);
        }
        
        private void OndeliverInvFkeyOperationCompleted(object arg) {
            if ((this.deliverInvFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deliverInvFkeyCompleted(this, new deliverInvFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deliverInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deliverInv(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("deliverInv", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deliverInvAsync(string lstInvToken, string userName, string userPass) {
            this.deliverInvAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void deliverInvAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.deliverInvOperationCompleted == null)) {
                this.deliverInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeliverInvOperationCompleted);
            }
            this.InvokeAsync("deliverInv", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.deliverInvOperationCompleted, userState);
        }
        
        private void OndeliverInvOperationCompleted(object arg) {
            if ((this.deliverInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deliverInvCompleted(this, new deliverInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/confirmPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPayment(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("confirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentAsync(string lstInvToken, string userName, string userPass) {
            this.confirmPaymentAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.confirmPaymentOperationCompleted == null)) {
                this.confirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("confirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.confirmPaymentOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentOperationCompleted(object arg) {
            if ((this.confirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentCompleted(this, new confirmPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/confirmPaymentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentDetail(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentDetail", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentDetailAsync(string lstInvToken, string userName, string userPass) {
            this.confirmPaymentDetailAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentDetailAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.confirmPaymentDetailOperationCompleted == null)) {
                this.confirmPaymentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentDetailOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentDetail", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.confirmPaymentDetailOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentDetailOperationCompleted(object arg) {
            if ((this.confirmPaymentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentDetailCompleted(this, new confirmPaymentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/unConfirmPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string unConfirmPayment(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("unConfirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void unConfirmPaymentAsync(string lstInvToken, string userName, string userPass) {
            this.unConfirmPaymentAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void unConfirmPaymentAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.unConfirmPaymentOperationCompleted == null)) {
                this.unConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("unConfirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.unConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnunConfirmPaymentOperationCompleted(object arg) {
            if ((this.unConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unConfirmPaymentCompleted(this, new unConfirmPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/confirmPaymentFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyAsync(string lstFkey, string userName, string userPass) {
            this.confirmPaymentFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.confirmPaymentFkeyOperationCompleted == null)) {
                this.confirmPaymentFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentFkeyOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.confirmPaymentFkeyOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentFkeyOperationCompleted(object arg) {
            if ((this.confirmPaymentFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentFkeyCompleted(this, new confirmPaymentFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/confirmPaymentDetailFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentDetailFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentDetailFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentDetailFkeyAsync(string lstFkey, string userName, string userPass) {
            this.confirmPaymentDetailFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentDetailFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.confirmPaymentDetailFkeyOperationCompleted == null)) {
                this.confirmPaymentDetailFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentDetailFkeyOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentDetailFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.confirmPaymentDetailFkeyOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentDetailFkeyOperationCompleted(object arg) {
            if ((this.confirmPaymentDetailFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentDetailFkeyCompleted(this, new confirmPaymentDetailFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/confirmPaymentFkeyVNP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentFkeyVNP(string lstFkey, bool isEmail, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        isEmail,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyVNPAsync(string lstFkey, bool isEmail, string userName, string userPass) {
            this.confirmPaymentFkeyVNPAsync(lstFkey, isEmail, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyVNPAsync(string lstFkey, bool isEmail, string userName, string userPass, object userState) {
            if ((this.confirmPaymentFkeyVNPOperationCompleted == null)) {
                this.confirmPaymentFkeyVNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentFkeyVNPOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        isEmail,
                        userName,
                        userPass}, this.confirmPaymentFkeyVNPOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentFkeyVNPOperationCompleted(object arg) {
            if ((this.confirmPaymentFkeyVNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentFkeyVNPCompleted(this, new confirmPaymentFkeyVNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnConfirmPaymentFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnConfirmPaymentFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("UnConfirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyAsync(string lstFkey, string userName, string userPass) {
            this.UnConfirmPaymentFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.UnConfirmPaymentFkeyOperationCompleted == null)) {
                this.UnConfirmPaymentFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnConfirmPaymentFkeyOperationCompleted);
            }
            this.InvokeAsync("UnConfirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.UnConfirmPaymentFkeyOperationCompleted, userState);
        }
        
        private void OnUnConfirmPaymentFkeyOperationCompleted(object arg) {
            if ((this.UnConfirmPaymentFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnConfirmPaymentFkeyCompleted(this, new UnConfirmPaymentFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnConfirmPaymentFkeyVNP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnConfirmPaymentFkeyVNP(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("UnConfirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyVNPAsync(string lstFkey, string userName, string userPass) {
            this.UnConfirmPaymentFkeyVNPAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyVNPAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.UnConfirmPaymentFkeyVNPOperationCompleted == null)) {
                this.UnConfirmPaymentFkeyVNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnConfirmPaymentFkeyVNPOperationCompleted);
            }
            this.InvokeAsync("UnConfirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.UnConfirmPaymentFkeyVNPOperationCompleted, userState);
        }
        
        private void OnUnConfirmPaymentFkeyVNPOperationCompleted(object arg) {
            if ((this.UnConfirmPaymentFkeyVNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnConfirmPaymentFkeyVNPCompleted(this, new UnConfirmPaymentFkeyVNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetTem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetTem(string username, string password) {
            object[] results = this.Invoke("ResetTem", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetTemAsync(string username, string password) {
            this.ResetTemAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ResetTemAsync(string username, string password, object userState) {
            if ((this.ResetTemOperationCompleted == null)) {
                this.ResetTemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetTemOperationCompleted);
            }
            this.InvokeAsync("ResetTem", new object[] {
                        username,
                        password}, this.ResetTemOperationCompleted, userState);
        }
        
        private void OnResetTemOperationCompleted(object arg) {
            if ((this.ResetTemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetTemCompleted(this, new ResetTemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRolesbyAcc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllRolesbyAcc(string usernameService, string passwordService) {
            object[] results = this.Invoke("GetAllRolesbyAcc", new object[] {
                        usernameService,
                        passwordService});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRolesbyAccAsync(string usernameService, string passwordService) {
            this.GetAllRolesbyAccAsync(usernameService, passwordService, null);
        }
        
        /// <remarks/>
        public void GetAllRolesbyAccAsync(string usernameService, string passwordService, object userState) {
            if ((this.GetAllRolesbyAccOperationCompleted == null)) {
                this.GetAllRolesbyAccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRolesbyAccOperationCompleted);
            }
            this.InvokeAsync("GetAllRolesbyAcc", new object[] {
                        usernameService,
                        passwordService}, this.GetAllRolesbyAccOperationCompleted, userState);
        }
        
        private void OnGetAllRolesbyAccOperationCompleted(object arg) {
            if ((this.GetAllRolesbyAccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRolesbyAccCompleted(this, new GetAllRolesbyAccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewUserbyAcc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateNewUserbyAcc(string usernameService, string passwordService, string username, string password, string usernew, string passnew, string retypepassnew, string email, bool IsApproved, bool IsLockedOut, string roles) {
            object[] results = this.Invoke("CreateNewUserbyAcc", new object[] {
                        usernameService,
                        passwordService,
                        username,
                        password,
                        usernew,
                        passnew,
                        retypepassnew,
                        email,
                        IsApproved,
                        IsLockedOut,
                        roles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewUserbyAccAsync(string usernameService, string passwordService, string username, string password, string usernew, string passnew, string retypepassnew, string email, bool IsApproved, bool IsLockedOut, string roles) {
            this.CreateNewUserbyAccAsync(usernameService, passwordService, username, password, usernew, passnew, retypepassnew, email, IsApproved, IsLockedOut, roles, null);
        }
        
        /// <remarks/>
        public void CreateNewUserbyAccAsync(string usernameService, string passwordService, string username, string password, string usernew, string passnew, string retypepassnew, string email, bool IsApproved, bool IsLockedOut, string roles, object userState) {
            if ((this.CreateNewUserbyAccOperationCompleted == null)) {
                this.CreateNewUserbyAccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewUserbyAccOperationCompleted);
            }
            this.InvokeAsync("CreateNewUserbyAcc", new object[] {
                        usernameService,
                        passwordService,
                        username,
                        password,
                        usernew,
                        passnew,
                        retypepassnew,
                        email,
                        IsApproved,
                        IsLockedOut,
                        roles}, this.CreateNewUserbyAccOperationCompleted, userState);
        }
        
        private void OnCreateNewUserbyAccOperationCompleted(object arg) {
            if ((this.CreateNewUserbyAccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewUserbyAccCompleted(this, new CreateNewUserbyAccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSerialByPattern", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSerialByPattern(string userName, string userPass, string pattern) {
            object[] results = this.Invoke("getSerialByPattern", new object[] {
                        userName,
                        userPass,
                        pattern});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSerialByPatternAsync(string userName, string userPass, string pattern) {
            this.getSerialByPatternAsync(userName, userPass, pattern, null);
        }
        
        /// <remarks/>
        public void getSerialByPatternAsync(string userName, string userPass, string pattern, object userState) {
            if ((this.getSerialByPatternOperationCompleted == null)) {
                this.getSerialByPatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSerialByPatternOperationCompleted);
            }
            this.InvokeAsync("getSerialByPattern", new object[] {
                        userName,
                        userPass,
                        pattern}, this.getSerialByPatternOperationCompleted, userState);
        }
        
        private void OngetSerialByPatternOperationCompleted(object arg) {
            if ((this.getSerialByPatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSerialByPatternCompleted(this, new getSerialByPatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPublishInvs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPublishInvs(string userName, string userPass) {
            object[] results = this.Invoke("getPublishInvs", new object[] {
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPublishInvsAsync(string userName, string userPass) {
            this.getPublishInvsAsync(userName, userPass, null);
        }
        
        /// <remarks/>
        public void getPublishInvsAsync(string userName, string userPass, object userState) {
            if ((this.getPublishInvsOperationCompleted == null)) {
                this.getPublishInvsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPublishInvsOperationCompleted);
            }
            this.InvokeAsync("getPublishInvs", new object[] {
                        userName,
                        userPass}, this.getPublishInvsOperationCompleted, userState);
        }
        
        private void OngetPublishInvsOperationCompleted(object arg) {
            if ((this.getPublishInvsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPublishInvsCompleted(this, new getPublishInvsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void replaceInvCompletedEventHandler(object sender, replaceInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class replaceInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal replaceInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReplaceInvoiceActionCompletedEventHandler(object sender, ReplaceInvoiceActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceInvoiceActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceInvoiceActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReplaceActionAssignedNoCompletedEventHandler(object sender, ReplaceActionAssignedNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceActionAssignedNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceActionAssignedNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReplaceInvoiceCompletedEventHandler(object sender, ReplaceInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void adjustInvCompletedEventHandler(object sender, adjustInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adjustInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adjustInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AdjustInvoiceActionCompletedEventHandler(object sender, AdjustInvoiceActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustInvoiceActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustInvoiceActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AdjustActionAssignedNoCompletedEventHandler(object sender, AdjustActionAssignedNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustActionAssignedNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustActionAssignedNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AdjustInvoiceCompletedEventHandler(object sender, AdjustInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cancelInvCompletedEventHandler(object sender, cancelInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cancelInvNoPayCompletedEventHandler(object sender, cancelInvNoPayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelInvNoPayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelInvNoPayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void poolingInvCompletedEventHandler(object sender, poolingInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class poolingInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal poolingInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInvbyFkeyCompletedEventHandler(object sender, GetInvbyFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvbyFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvbyFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void reportInvUsedCompletedEventHandler(object sender, reportInvUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportInvUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportInvUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void reportMonthCompletedEventHandler(object sender, reportMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reportMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deliverInvFkeyCompletedEventHandler(object sender, deliverInvFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deliverInvFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deliverInvFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deliverInvCompletedEventHandler(object sender, deliverInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deliverInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deliverInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void confirmPaymentCompletedEventHandler(object sender, confirmPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void confirmPaymentDetailCompletedEventHandler(object sender, confirmPaymentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmPaymentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void unConfirmPaymentCompletedEventHandler(object sender, unConfirmPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unConfirmPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unConfirmPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void confirmPaymentFkeyCompletedEventHandler(object sender, confirmPaymentFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmPaymentFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void confirmPaymentDetailFkeyCompletedEventHandler(object sender, confirmPaymentDetailFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmPaymentDetailFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentDetailFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void confirmPaymentFkeyVNPCompletedEventHandler(object sender, confirmPaymentFkeyVNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmPaymentFkeyVNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentFkeyVNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UnConfirmPaymentFkeyCompletedEventHandler(object sender, UnConfirmPaymentFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnConfirmPaymentFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnConfirmPaymentFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UnConfirmPaymentFkeyVNPCompletedEventHandler(object sender, UnConfirmPaymentFkeyVNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnConfirmPaymentFkeyVNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnConfirmPaymentFkeyVNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetTemCompletedEventHandler(object sender, ResetTemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetTemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetTemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllRolesbyAccCompletedEventHandler(object sender, GetAllRolesbyAccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRolesbyAccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRolesbyAccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewUserbyAccCompletedEventHandler(object sender, CreateNewUserbyAccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewUserbyAccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewUserbyAccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getSerialByPatternCompletedEventHandler(object sender, getSerialByPatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSerialByPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSerialByPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getPublishInvsCompletedEventHandler(object sender, getPublishInvsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPublishInvsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPublishInvsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591