//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 

using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

#pragma warning disable 1591

namespace V6ThuePostXmlApi.Web_References.BusinessService {
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name="BusinessServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BusinessService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReplaceInvoieOperationCompleted;
        
        private System.Threading.SendOrPostCallback replaceInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback adjustInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustInvoieOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelInvDetailFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportInvUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback reportMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback deliverInvFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback deliverInvOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback unConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentDetailFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmPaymentFkeyVNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnConfirmPaymentFkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnConfirmPaymentFkeyVNPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnconfirmPaymentDetailFkeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BusinessService() {
            this.Url = global::V6ThuePostXmlApi.Properties.Settings.Default.V6ThuePostApi_BusinessService_BusinessService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public BusinessService(string url) {
            this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReplaceInvoieCompletedEventHandler ReplaceInvoieCompleted;
        
        /// <remarks/>
        public event replaceInvCompletedEventHandler replaceInvCompleted;
        
        /// <remarks/>
        public event adjustInvCompletedEventHandler adjustInvCompleted;
        
        /// <remarks/>
        public event AdjustInvoieCompletedEventHandler AdjustInvoieCompleted;
        
        /// <remarks/>
        public event cancelInvCompletedEventHandler cancelInvCompleted;
        
        /// <remarks/>
        public event cancelInvDetailFkeyCompletedEventHandler cancelInvDetailFkeyCompleted;
        
        /// <remarks/>
        public event reportInvUsedCompletedEventHandler reportInvUsedCompleted;
        
        /// <remarks/>
        public event reportMonthCompletedEventHandler reportMonthCompleted;
        
        /// <remarks/>
        public event deliverInvFkeyCompletedEventHandler deliverInvFkeyCompleted;
        
        /// <remarks/>
        public event deliverInvCompletedEventHandler deliverInvCompleted;
        
        /// <remarks/>
        public event confirmPaymentCompletedEventHandler confirmPaymentCompleted;
        
        /// <remarks/>
        public event confirmPaymentDetailCompletedEventHandler confirmPaymentDetailCompleted;
        
        /// <remarks/>
        public event unConfirmPaymentCompletedEventHandler unConfirmPaymentCompleted;
        
        /// <remarks/>
        public event confirmPaymentFkeyCompletedEventHandler confirmPaymentFkeyCompleted;
        
        /// <remarks/>
        public event confirmPaymentDetailFkeyCompletedEventHandler confirmPaymentDetailFkeyCompleted;
        
        /// <remarks/>
        public event confirmPaymentFkeyVNPCompletedEventHandler confirmPaymentFkeyVNPCompleted;
        
        /// <remarks/>
        public event UnConfirmPaymentFkeyCompletedEventHandler UnConfirmPaymentFkeyCompleted;
        
        /// <remarks/>
        public event UnConfirmPaymentFkeyVNPCompletedEventHandler UnConfirmPaymentFkeyVNPCompleted;
        
        /// <remarks/>
        public event UnconfirmPaymentDetailFkeyCompletedEventHandler UnconfirmPaymentDetailFkeyCompleted;
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/ReplaceInvoie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceInvoie(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, [XmlElement(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("ReplaceInvoie", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        Attachfile,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceInvoieAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, System.Nullable<int> convert) {
            this.ReplaceInvoieAsync(Account, ACpass, xmlInvData, username, pass, fkey, Attachfile, convert, null);
        }
        
        /// <remarks/>
        public void ReplaceInvoieAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string Attachfile, System.Nullable<int> convert, object userState) {
            if ((this.ReplaceInvoieOperationCompleted == null)) {
                this.ReplaceInvoieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceInvoieOperationCompleted);
            }
            this.InvokeAsync("ReplaceInvoie", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        Attachfile,
                        convert}, this.ReplaceInvoieOperationCompleted, userState);
        }
        
        private void OnReplaceInvoieOperationCompleted(object arg) {
            if ((this.ReplaceInvoieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceInvoieCompleted(this, new ReplaceInvoieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/replaceInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string replaceInv(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, [XmlElement(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("replaceInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void replaceInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert) {
            this.replaceInvAsync(Account, ACpass, xmlInvData, username, pass, fkey, convert, null);
        }
        
        /// <remarks/>
        public void replaceInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert, object userState) {
            if ((this.replaceInvOperationCompleted == null)) {
                this.replaceInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplaceInvOperationCompleted);
            }
            this.InvokeAsync("replaceInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert}, this.replaceInvOperationCompleted, userState);
        }
        
        private void OnreplaceInvOperationCompleted(object arg) {
            if ((this.replaceInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replaceInvCompleted(this, new replaceInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/adjustInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string adjustInv(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, [XmlElement(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("adjustInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void adjustInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert) {
            this.adjustInvAsync(Account, ACpass, xmlInvData, username, pass, fkey, convert, null);
        }
        
        /// <remarks/>
        public void adjustInvAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, System.Nullable<int> convert, object userState) {
            if ((this.adjustInvOperationCompleted == null)) {
                this.adjustInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadjustInvOperationCompleted);
            }
            this.InvokeAsync("adjustInv", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        convert}, this.adjustInvOperationCompleted, userState);
        }
        
        private void OnadjustInvOperationCompleted(object arg) {
            if ((this.adjustInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adjustInvCompleted(this, new adjustInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/AdjustInvoie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdjustInvoie(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, [XmlElement(IsNullable=true)] System.Nullable<int> convert) {
            object[] results = this.Invoke("AdjustInvoie", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustInvoieAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert) {
            this.AdjustInvoieAsync(Account, ACpass, xmlInvData, username, pass, fkey, AttachFile, convert, null);
        }
        
        /// <remarks/>
        public void AdjustInvoieAsync(string Account, string ACpass, string xmlInvData, string username, string pass, string fkey, string AttachFile, System.Nullable<int> convert, object userState) {
            if ((this.AdjustInvoieOperationCompleted == null)) {
                this.AdjustInvoieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustInvoieOperationCompleted);
            }
            this.InvokeAsync("AdjustInvoie", new object[] {
                        Account,
                        ACpass,
                        xmlInvData,
                        username,
                        pass,
                        fkey,
                        AttachFile,
                        convert}, this.AdjustInvoieOperationCompleted, userState);
        }
        
        private void OnAdjustInvoieOperationCompleted(object arg) {
            if ((this.AdjustInvoieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustInvoieCompleted(this, new AdjustInvoieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/cancelInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string cancelInv(string Account, string ACpass, string fkey, string userName, string userPass) {
            object[] results = this.Invoke("cancelInv", new object[] {
                        Account,
                        ACpass,
                        fkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelInvAsync(string Account, string ACpass, string fkey, string userName, string userPass) {
            this.cancelInvAsync(Account, ACpass, fkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void cancelInvAsync(string Account, string ACpass, string fkey, string userName, string userPass, object userState) {
            if ((this.cancelInvOperationCompleted == null)) {
                this.cancelInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelInvOperationCompleted);
            }
            this.InvokeAsync("cancelInv", new object[] {
                        Account,
                        ACpass,
                        fkey,
                        userName,
                        userPass}, this.cancelInvOperationCompleted, userState);
        }
        
        private void OncancelInvOperationCompleted(object arg) {
            if ((this.cancelInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelInvCompleted(this, new cancelInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/cancelInvDetailFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string cancelInvDetailFkey(string Account, string ACpass, string lstFkey, string userName, string userPass, bool checkPayment) {
            object[] results = this.Invoke("cancelInvDetailFkey", new object[] {
                        Account,
                        ACpass,
                        lstFkey,
                        userName,
                        userPass,
                        checkPayment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelInvDetailFkeyAsync(string Account, string ACpass, string lstFkey, string userName, string userPass, bool checkPayment) {
            this.cancelInvDetailFkeyAsync(Account, ACpass, lstFkey, userName, userPass, checkPayment, null);
        }
        
        /// <remarks/>
        public void cancelInvDetailFkeyAsync(string Account, string ACpass, string lstFkey, string userName, string userPass, bool checkPayment, object userState) {
            if ((this.cancelInvDetailFkeyOperationCompleted == null)) {
                this.cancelInvDetailFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelInvDetailFkeyOperationCompleted);
            }
            this.InvokeAsync("cancelInvDetailFkey", new object[] {
                        Account,
                        ACpass,
                        lstFkey,
                        userName,
                        userPass,
                        checkPayment}, this.cancelInvDetailFkeyOperationCompleted, userState);
        }
        
        private void OncancelInvDetailFkeyOperationCompleted(object arg) {
            if ((this.cancelInvDetailFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelInvDetailFkeyCompleted(this, new cancelInvDetailFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/reportInvUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string reportInvUsed(int year, int quarter, int currentQuater, string username, string pass) {
            object[] results = this.Invoke("reportInvUsed", new object[] {
                        year,
                        quarter,
                        currentQuater,
                        username,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reportInvUsedAsync(int year, int quarter, int currentQuater, string username, string pass) {
            this.reportInvUsedAsync(year, quarter, currentQuater, username, pass, null);
        }
        
        /// <remarks/>
        public void reportInvUsedAsync(int year, int quarter, int currentQuater, string username, string pass, object userState) {
            if ((this.reportInvUsedOperationCompleted == null)) {
                this.reportInvUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportInvUsedOperationCompleted);
            }
            this.InvokeAsync("reportInvUsed", new object[] {
                        year,
                        quarter,
                        currentQuater,
                        username,
                        pass}, this.reportInvUsedOperationCompleted, userState);
        }
        
        private void OnreportInvUsedOperationCompleted(object arg) {
            if ((this.reportInvUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportInvUsedCompleted(this, new reportInvUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/reportMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string reportMonth(int year, int month, int currentQuater, string username, string pass) {
            object[] results = this.Invoke("reportMonth", new object[] {
                        year,
                        month,
                        currentQuater,
                        username,
                        pass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void reportMonthAsync(int year, int month, int currentQuater, string username, string pass) {
            this.reportMonthAsync(year, month, currentQuater, username, pass, null);
        }
        
        /// <remarks/>
        public void reportMonthAsync(int year, int month, int currentQuater, string username, string pass, object userState) {
            if ((this.reportMonthOperationCompleted == null)) {
                this.reportMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreportMonthOperationCompleted);
            }
            this.InvokeAsync("reportMonth", new object[] {
                        year,
                        month,
                        currentQuater,
                        username,
                        pass}, this.reportMonthOperationCompleted, userState);
        }
        
        private void OnreportMonthOperationCompleted(object arg) {
            if ((this.reportMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reportMonthCompleted(this, new reportMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/deliverInvFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deliverInvFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("deliverInvFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deliverInvFkeyAsync(string lstFkey, string userName, string userPass) {
            this.deliverInvFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void deliverInvFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.deliverInvFkeyOperationCompleted == null)) {
                this.deliverInvFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeliverInvFkeyOperationCompleted);
            }
            this.InvokeAsync("deliverInvFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.deliverInvFkeyOperationCompleted, userState);
        }
        
        private void OndeliverInvFkeyOperationCompleted(object arg) {
            if ((this.deliverInvFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deliverInvFkeyCompleted(this, new deliverInvFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/deliverInv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deliverInv(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("deliverInv", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deliverInvAsync(string lstInvToken, string userName, string userPass) {
            this.deliverInvAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void deliverInvAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.deliverInvOperationCompleted == null)) {
                this.deliverInvOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeliverInvOperationCompleted);
            }
            this.InvokeAsync("deliverInv", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.deliverInvOperationCompleted, userState);
        }
        
        private void OndeliverInvOperationCompleted(object arg) {
            if ((this.deliverInvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deliverInvCompleted(this, new deliverInvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/confirmPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPayment(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("confirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentAsync(string lstInvToken, string userName, string userPass) {
            this.confirmPaymentAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.confirmPaymentOperationCompleted == null)) {
                this.confirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("confirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.confirmPaymentOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentOperationCompleted(object arg) {
            if ((this.confirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentCompleted(this, new confirmPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/confirmPaymentDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentDetail(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentDetail", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentDetailAsync(string lstInvToken, string userName, string userPass) {
            this.confirmPaymentDetailAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentDetailAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.confirmPaymentDetailOperationCompleted == null)) {
                this.confirmPaymentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentDetailOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentDetail", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.confirmPaymentDetailOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentDetailOperationCompleted(object arg) {
            if ((this.confirmPaymentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentDetailCompleted(this, new confirmPaymentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/unConfirmPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string unConfirmPayment(string lstInvToken, string userName, string userPass) {
            object[] results = this.Invoke("unConfirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void unConfirmPaymentAsync(string lstInvToken, string userName, string userPass) {
            this.unConfirmPaymentAsync(lstInvToken, userName, userPass, null);
        }
        
        /// <remarks/>
        public void unConfirmPaymentAsync(string lstInvToken, string userName, string userPass, object userState) {
            if ((this.unConfirmPaymentOperationCompleted == null)) {
                this.unConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("unConfirmPayment", new object[] {
                        lstInvToken,
                        userName,
                        userPass}, this.unConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnunConfirmPaymentOperationCompleted(object arg) {
            if ((this.unConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unConfirmPaymentCompleted(this, new unConfirmPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/confirmPaymentFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyAsync(string lstFkey, string userName, string userPass) {
            this.confirmPaymentFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.confirmPaymentFkeyOperationCompleted == null)) {
                this.confirmPaymentFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentFkeyOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.confirmPaymentFkeyOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentFkeyOperationCompleted(object arg) {
            if ((this.confirmPaymentFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentFkeyCompleted(this, new confirmPaymentFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/confirmPaymentDetailFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentDetailFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentDetailFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentDetailFkeyAsync(string lstFkey, string userName, string userPass) {
            this.confirmPaymentDetailFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentDetailFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.confirmPaymentDetailFkeyOperationCompleted == null)) {
                this.confirmPaymentDetailFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentDetailFkeyOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentDetailFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.confirmPaymentDetailFkeyOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentDetailFkeyOperationCompleted(object arg) {
            if ((this.confirmPaymentDetailFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentDetailFkeyCompleted(this, new confirmPaymentDetailFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/confirmPaymentFkeyVNP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string confirmPaymentFkeyVNP(string lstFkey, bool isEmail, string userName, string userPass) {
            object[] results = this.Invoke("confirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        isEmail,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyVNPAsync(string lstFkey, bool isEmail, string userName, string userPass) {
            this.confirmPaymentFkeyVNPAsync(lstFkey, isEmail, userName, userPass, null);
        }
        
        /// <remarks/>
        public void confirmPaymentFkeyVNPAsync(string lstFkey, bool isEmail, string userName, string userPass, object userState) {
            if ((this.confirmPaymentFkeyVNPOperationCompleted == null)) {
                this.confirmPaymentFkeyVNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmPaymentFkeyVNPOperationCompleted);
            }
            this.InvokeAsync("confirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        isEmail,
                        userName,
                        userPass}, this.confirmPaymentFkeyVNPOperationCompleted, userState);
        }
        
        private void OnconfirmPaymentFkeyVNPOperationCompleted(object arg) {
            if ((this.confirmPaymentFkeyVNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmPaymentFkeyVNPCompleted(this, new confirmPaymentFkeyVNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/UnConfirmPaymentFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnConfirmPaymentFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("UnConfirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyAsync(string lstFkey, string userName, string userPass) {
            this.UnConfirmPaymentFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.UnConfirmPaymentFkeyOperationCompleted == null)) {
                this.UnConfirmPaymentFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnConfirmPaymentFkeyOperationCompleted);
            }
            this.InvokeAsync("UnConfirmPaymentFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.UnConfirmPaymentFkeyOperationCompleted, userState);
        }
        
        private void OnUnConfirmPaymentFkeyOperationCompleted(object arg) {
            if ((this.UnConfirmPaymentFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnConfirmPaymentFkeyCompleted(this, new UnConfirmPaymentFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/UnConfirmPaymentFkeyVNP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnConfirmPaymentFkeyVNP(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("UnConfirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyVNPAsync(string lstFkey, string userName, string userPass) {
            this.UnConfirmPaymentFkeyVNPAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void UnConfirmPaymentFkeyVNPAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.UnConfirmPaymentFkeyVNPOperationCompleted == null)) {
                this.UnConfirmPaymentFkeyVNPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnConfirmPaymentFkeyVNPOperationCompleted);
            }
            this.InvokeAsync("UnConfirmPaymentFkeyVNP", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.UnConfirmPaymentFkeyVNPOperationCompleted, userState);
        }
        
        private void OnUnConfirmPaymentFkeyVNPOperationCompleted(object arg) {
            if ((this.UnConfirmPaymentFkeyVNPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnConfirmPaymentFkeyVNPCompleted(this, new UnConfirmPaymentFkeyVNPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/UnconfirmPaymentDetailFkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnconfirmPaymentDetailFkey(string lstFkey, string userName, string userPass) {
            object[] results = this.Invoke("UnconfirmPaymentDetailFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnconfirmPaymentDetailFkeyAsync(string lstFkey, string userName, string userPass) {
            this.UnconfirmPaymentDetailFkeyAsync(lstFkey, userName, userPass, null);
        }
        
        /// <remarks/>
        public void UnconfirmPaymentDetailFkeyAsync(string lstFkey, string userName, string userPass, object userState) {
            if ((this.UnconfirmPaymentDetailFkeyOperationCompleted == null)) {
                this.UnconfirmPaymentDetailFkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnconfirmPaymentDetailFkeyOperationCompleted);
            }
            this.InvokeAsync("UnconfirmPaymentDetailFkey", new object[] {
                        lstFkey,
                        userName,
                        userPass}, this.UnconfirmPaymentDetailFkeyOperationCompleted, userState);
        }
        
        private void OnUnconfirmPaymentDetailFkeyOperationCompleted(object arg) {
            if ((this.UnconfirmPaymentDetailFkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnconfirmPaymentDetailFkeyCompleted(this, new UnconfirmPaymentDetailFkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReplaceInvoieCompletedEventHandler(object sender, ReplaceInvoieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ReplaceInvoieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceInvoieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void replaceInvCompletedEventHandler(object sender, replaceInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class replaceInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal replaceInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void adjustInvCompletedEventHandler(object sender, adjustInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class adjustInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adjustInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AdjustInvoieCompletedEventHandler(object sender, AdjustInvoieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class AdjustInvoieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustInvoieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void cancelInvCompletedEventHandler(object sender, cancelInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class cancelInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void cancelInvDetailFkeyCompletedEventHandler(object sender, cancelInvDetailFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class cancelInvDetailFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelInvDetailFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void reportInvUsedCompletedEventHandler(object sender, reportInvUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class reportInvUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportInvUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void reportMonthCompletedEventHandler(object sender, reportMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class reportMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reportMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deliverInvFkeyCompletedEventHandler(object sender, deliverInvFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class deliverInvFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deliverInvFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deliverInvCompletedEventHandler(object sender, deliverInvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class deliverInvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deliverInvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void confirmPaymentCompletedEventHandler(object sender, confirmPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class confirmPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void confirmPaymentDetailCompletedEventHandler(object sender, confirmPaymentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class confirmPaymentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void unConfirmPaymentCompletedEventHandler(object sender, unConfirmPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class unConfirmPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unConfirmPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void confirmPaymentFkeyCompletedEventHandler(object sender, confirmPaymentFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class confirmPaymentFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void confirmPaymentDetailFkeyCompletedEventHandler(object sender, confirmPaymentDetailFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class confirmPaymentDetailFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentDetailFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void confirmPaymentFkeyVNPCompletedEventHandler(object sender, confirmPaymentFkeyVNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class confirmPaymentFkeyVNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmPaymentFkeyVNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UnConfirmPaymentFkeyCompletedEventHandler(object sender, UnConfirmPaymentFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class UnConfirmPaymentFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnConfirmPaymentFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UnConfirmPaymentFkeyVNPCompletedEventHandler(object sender, UnConfirmPaymentFkeyVNPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class UnConfirmPaymentFkeyVNPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnConfirmPaymentFkeyVNPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UnconfirmPaymentDetailFkeyCompletedEventHandler(object sender, UnconfirmPaymentDetailFkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class UnconfirmPaymentDetailFkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnconfirmPaymentDetailFkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591